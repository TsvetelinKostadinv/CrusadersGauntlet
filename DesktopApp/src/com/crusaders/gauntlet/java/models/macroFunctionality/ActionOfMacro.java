package com.crusaders.gauntlet.java.models.macroFunctionality;

import java.io.*;

import com.crusaders.gauntlet.java.fileManagement.CreatorDeletor;
import com.crusaders.gauntlet.java.fileManagement.FileCreatorDeletor;
import com.crusaders.gauntlet.java.fileManagement.FileWriter;
import com.crusaders.gauntlet.java.fileManagement.Writer;
import com.crusaders.gauntlet.java.models.codeGeneration.CodeGeneratorCPP;
import com.crusaders.gauntlet.java.models.codeGeneration.Command;
import com.crusaders.gauntlet.java.models.exeptions.UnableToExecuteExeption;

public class ActionOfMacro {

    private File actionScript;
    private FileWriter writer;
    private FileCreatorDeletor creator;
    private CodeGeneratorCPP gen = new CodeGeneratorCPP();

	private static int indexOfScript = 0;

	private final String directoryPath = "src/com/crusaders/gauntlet/scripts/autoGeneratedScripts/";
	private final String defaultName = "ActionOfMacro";
	private final String extentionOfFile = gen.extention;
	

	private boolean hasBeenInited = false;
	private int fileIndex;
	private String fileName;
	
	public ActionOfMacro()
	{
		
		fileIndex = indexOfScript;
		fileName = defaultName+indexOfScript;
		
		actionScript = new File(directoryPath + fileName + extentionOfFile);

		//Change the index for the next script
		indexOfScript++;
		
		System.out.println("Created the action object");
	}
	
	public void initMacroScript()
	{
		//System.out.println("Starting init procedure");
		
        initDependecies();
        createScriptFile();

        //writer.writeToFile(gen.generateDefaultCode());

		System.out.println(gen.generateDefaultCode());
		
		hasBeenInited = true;
	}

	private void initDependecies()
    {
		this.creator = new CreatorDeletor();
        this.writer = Writer.getInstance();
        writer.assignFile(actionScript);
        this.gen = new CodeGeneratorCPP();
        
    }


	private void createScriptFile() {
		if(!hasBeenInited)
		{
			creator.createFile(actionScript, directoryPath);
			hasBeenInited = true;
		}else{
			System.out.println("Already Inited!!");
		}
	}

	public boolean hasBeenInited()
	{
		return hasBeenInited;
	}

	public boolean execute() throws UnableToExecuteExeption, FileNotFoundException {
		if(hasBeenInited)
		{
//			Runtime rt = Runtime.getRuntime();
//			Process pr = rt.exec("")
			System.out.println("Executing the script...");
		}
		return true;
	}
	
	
	public void insertCommand(Command command)
	{
		command.extractCommands();
	}
	
}
